{"version":3,"sources":["assets/images/testImg.png","reducer/index.ts","utils/index.ts","App.tsx","example/index.tsx","reportWebVitals.ts","index.tsx"],"names":["reducer","state","action","type","flag","map","item","selected","point","push","payload","flag2","index","flag3","end","Error","getPoint","svgDom","x","y","pt","createSVGPoint","svgP","matrixTransform","getScreenCTM","inverse","isNeed","isEnd","isSelected","transformPoint","cPoint","points","reduce","a","b","getArrowPoint","result","substr","length","LabelPanel","React","forwardRef","ref","data","onChange","width","height","imgUrl","svgRef","useRef","useReducer","labelReducer","list","dispatch","useState","setAction","setCpoint","setIndex","widthReal","heightReal","useEffect","currentLabel","getCurrentSelected","filter","drawShap","shapType","color","useImperativeHandle","className","style","onMouseUp","userSelect","onMouseMove","event","current","clientX","clientY","onClick","detail","onDoubleClick","id","markerUnits","markerWidth","markerHeight","refX","refY","orient","d","fill","listItem","shape","key","stroke","strokeWidth","markerEnd","item1","onMouseDown","e","cx","cy","r","cursor","fillOpacity","fillRule","src","alt","Demo","setList","cal","newList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d7a7b05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/testImg.9c3dc699.png\";","import { Point, MarkData } from '../type'\n\ntype Action =\n  | { type: 'load'; payload: MarkData[] }\n  | { type: 'draw'; payload: Point }\n  | { type: 'add'; payload: MarkData }\n  | { type: 'move'; payload: Point; index: number }\n  | { type: 'end'; end: boolean }\n\nexport default function reducer(state: MarkData[], action: Action) {\n  switch (action.type) {\n    case 'draw':\n      let flag = true\n      const Newstate = state.map((item) => {\n        if (item.selected && flag) {\n          flag = false\n          item.point.push(action.payload)\n        }\n        return item\n      })\n      return Newstate\n    case 'add':\n      return [\n        ...state.map((item) => {\n          item.selected = false\n          return item\n        }),\n        action.payload,\n      ]\n    case 'move':\n      let flag2 = true\n      return state.map((item) => {\n        if (item.selected && flag2) {\n          flag2 = false\n          item.point[action.index] = action.payload\n        }\n        return item\n      })\n    case 'end':\n      let flag3 = true\n      return state.map((item) => {\n        if (item.selected && flag3) {\n          item.end = action.end\n          flag3 = false\n        }\n        return item\n      })\n    default:\n      throw new Error()\n  }\n}\n","import { Point } from '../type'\n\nexport const getPoint = (svgDom: SVGSVGElement, x: number, y: number) => {\n  const pt = svgDom.createSVGPoint()\n  pt.x = x\n  pt.y = y\n  const svgP = pt.matrixTransform(svgDom.getScreenCTM()?.inverse())\n  return { x: svgP.x, y: svgP.y }\n}\n\nexport const isNeed = (isEnd: boolean, isSelected: boolean): boolean => {\n  if (isSelected && !isEnd) return true\n  return false\n}\n\nexport const transformPoint = (cPoint: Point, points: Point[], isEnd: boolean, isSelected: boolean): string => {\n  const pointHas = points.reduce((a, b) => {\n    return `${a} ${b.x} ${b.y}`\n  }, '')\n  const pointMouse = isNeed(isEnd, isSelected) ? ` ${cPoint?.x} ${cPoint?.y}` : ''\n  return pointHas + pointMouse\n}\n\nexport const getArrowPoint = (cPoint: Point, points: Point[], isEnd: boolean, isSelected: boolean) => {\n  let result = 'M ' + points.reduce((a, b) => `${a} ${b.x} ${b.y} L`, '')\n  result += isNeed(isEnd, isSelected) ? ` ${cPoint ? cPoint.x : ''} ${cPoint ? cPoint.y : ''} L` : ''\n  return result.substr(0, result.length - 1)\n}\n","import React, { useState, useRef, useEffect, useReducer, useImperativeHandle } from 'react'\nimport labelReducer from './reducer'\nimport { Point, MarkData, RefObject, ActionState,Drawfn } from './type'\nimport { getPoint, transformPoint, getArrowPoint } from './utils'\nimport './App.scss'\n\ninterface IProps {\n  data: MarkData[]\n  onChange: (data: MarkData[]) => void\n  imgUrl: string\n  width?: number\n  height?: number\n}\n\nconst LabelPanel = React.forwardRef<RefObject, IProps>(({ data, onChange, width, height, imgUrl }, ref) => {\n  const svgRef = useRef<SVGSVGElement | null>(null)\n  const [list, dispatch] = useReducer(labelReducer, data)\n  const [action, setAction] = useState<ActionState>('view')\n  const [cPoint, setCpoint] = useState<Point>({ x: 0, y: 0 })\n  const [index, setIndex] = useState<number | null>(null)\n  const [widthReal] = useState(width || 800)\n  const [heightReal] = useState(height || 600)\n\n  useEffect(() => {\n    const currentLabel = getCurrentSelected()\n    setAction(currentLabel ? currentLabel.type : 'view')\n    onChange(list)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [list])\n\n  const getCurrentSelected = (): MarkData => {\n    return list.filter((item) => item.selected === true)[0]\n  }\n\n  const drawShap: Drawfn = (shapType, color) => {\n    setAction(shapType)\n    dispatch({\n      type: 'add',\n      payload: {\n        type: shapType,\n        color,\n        point: [],\n        selected: true,\n        end: false,\n      },\n    })\n  }\n\n  const onClick = (event: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    const currentLabel = getCurrentSelected()\n    // 当前无选定标注或者已结束\n    if (!currentLabel || currentLabel.end) return\n    // 判断双击\n    if (event.detail === 2) return\n    if (svgRef.current) {\n      const point = getPoint(svgRef.current, event.clientX, event.clientY)\n      switch (currentLabel.type) {\n        case 'arrow': {\n          dispatch({ type: 'draw', payload: point })\n          // svg click事件dispatch是同步的\n          if (currentLabel.point.length > 1) {\n            setAction('view')\n            dispatch({ type: 'end', end: true })\n          }\n          break\n        }\n        default: {\n          dispatch({ type: 'draw', payload: point })\n        }\n      }\n    }\n  }\n\n  const ondblClick = () => {\n    if (action === 'view') return\n    setAction('view')\n    dispatch({ type: 'end', end: true })\n  }\n\n  const onMouseMove = (event: React.MouseEvent<SVGSVGElement, MouseEvent>): void => {\n    if (svgRef.current) {\n      const point = getPoint(svgRef.current, event.clientX, event.clientY)\n      if (index !== null) {\n        dispatch({ type: 'move', payload: point, index: index })\n      }\n      setCpoint(point)\n    }\n  }\n\n  const onMouseDown = (e: React.MouseEvent<SVGGElement, MouseEvent>, point: Point, index: number) => {\n    const currentLabel = getCurrentSelected()\n    if (currentLabel.end) {\n      setIndex(index)\n    }\n  }\n\n  const onMouseUp = () => {\n    setIndex(null)\n  }\n\n  useImperativeHandle(ref, () => ({\n    drawShap,\n  }))\n\n  return (\n    <div className=\"App\">\n      <div style={{ width: widthReal, height: heightReal }} className={'container'}>\n        <div className={'markData'}>\n          <svg onMouseUp={onMouseUp} style={{ userSelect: 'none' }} ref={svgRef} onMouseMove={onMouseMove} onClick={onClick} onDoubleClick={ondblClick} width={widthReal} height={heightReal}>\n            <defs>\n              <marker id=\"triangle\" markerUnits=\"strokeWidth\" markerWidth=\"5\" markerHeight=\"4\" refX=\"0\" refY=\"2\" orient=\"auto\">\n                <path d=\"M 0 0 L 5 2 L 0 4 z\" fill=\"#f00\" />\n              </marker>\n            </defs>\n            {list.map((listItem, index) => {\n              let shape = null\n              switch (listItem.type) {\n                case 'arrow': {\n                  shape = listItem.point && (\n                    <path\n                      key={index}\n                      d={getArrowPoint(cPoint, listItem.point, listItem.end, listItem.selected)}\n                      stroke={listItem.color}\n                      strokeWidth=\"2\"\n                      fill=\"none\"\n                      style={{ markerEnd: listItem.point.length > 1 ? 'url(#triangle)' : 'none' }}\n                    />\n                  )\n                  break\n                }\n                case 'polyline': {\n                  shape = <polyline key={index} points={transformPoint(cPoint, listItem.point, listItem.end, listItem.selected)} stroke={listItem.color} fill=\"none\" strokeWidth=\"5\" />\n                  break\n                }\n                case 'polygon': {\n                  shape = <polygon key={index} points={transformPoint(cPoint, listItem.point, listItem.end, listItem.selected)} stroke={listItem.color} fill=\"none\" strokeWidth=\"5\" />\n                  break\n                }\n              }\n              return shape\n            })}\n            {list\n              .filter((item1) => item1.selected === true)[0]\n              ?.point.map((item, index) => (\n                <circle\n                  onMouseDown={(e) => {\n                    onMouseDown(e, item, index)\n                  }}\n                  key={index}\n                  cx={item.x}\n                  cy={item.y}\n                  r=\"8\"\n                  style={{ fill: 'transparent', cursor: 'pointer' }}\n                  stroke=\"red\"\n                  strokeWidth=\"2\"\n                  fillOpacity=\"1\"\n                  fillRule=\"nonzero\"\n                />\n              ))}\n          </svg>\n        </div>\n        <img src={imgUrl} alt=\"\" />\n      </div>\n    </div>\n  )\n})\n\nexport default LabelPanel\n","import React, { useState, useRef } from 'react'\nimport imgUrl from '../../src/assets/images/testImg.png'\nimport { MarkData, RefObject, MarkType } from '../type'\nimport LabelPanel from '../App'\nconst Demo = () => {\n  // {\n  //   type: 'polyline',\n  //   point: [\n  //     { x: 100, y: 200 },\n  //   ],\n  //   color: 'blue',\n  //   selected: true,\n  //   end: false,\n  // },\n  const [list, setList] = useState<MarkData[]>([])\n  const cal = useRef<RefObject>(null)\n  const drawShap = (shapType: MarkType, color: string) => {\n    if (cal.current !== null) {\n      cal.current.drawShap(shapType, color)\n    }\n  }\n  return (\n    <div>\n      <button\n        onClick={() => {\n          const newList = [...list]\n          newList.map(item=>item.selected=false)\n          newList[0].selected = true\n          setList(newList)\n        }}\n      >\n        list444\n      </button>\n      <button onClick={() => drawShap('arrow', 'red')}>arrow</button>\n      <button onClick={() => drawShap('polygon', 'yellow')}>polygon</button>\n      <button onClick={() => drawShap('polyline', 'blue')}>polyline</button>\n      <LabelPanel\n        ref={cal}\n        imgUrl={imgUrl}\n        data={list}\n        onChange={(e) => {\n          setList(e)\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Demo\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Demo from './example';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Demo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}